
import os
if not os.path.exists(config['WORKDIR']+'/QC'):
	os.makedirs(config['WORKDIR']+'/QC')
if not os.path.exists(config['WORKDIR']+'/alignment'):
	os.makedirs(config['WORKDIR']+'/alignment')
if not os.path.exists(config['WORKDIR']+'/tmps'):
	os.makedirs(config['WORKDIR']+'/tmps')
if not os.path.exists(config['WORKDIR']+'/macs2'):
	os.makedirs(config['WORKDIR']+'/macs2')
if not os.path.exists(config['WORKDIR']+'/bigwig'):
	os.makedirs(config['WORKDIR']+'/bigwig')

workdir:config['WORKDIR']

rule final:
	input:
		peak='macs2/'+config['treat']+'_peaks.narrowPeak',
		bw='bigwig/'+config['treat']+'.bw'
rule QC:
	input:
		treat_file='raw/'+config['treat']+'.fastq.gz'
	output:
		qc_file='QC/'+config['treat']+'_fastqc.html'
	shell:
		"""{config[qc_bin]} -o {config[qc_dir]} -c {config[qc_con]} -a {config[qc_ada]} -l {config[qc_lim]} {input.treat_file}"""
rule align:
	input:
		fq_file='raw/'+config['treat']+'.fastq.gz',
		qc_file='QC/'+config['treat']+'_fastqc.html'
	output:
		aln_file='alignment/'+config['treat']+'.bam'
	shell:
		"""{config[decompress]} -c {input.fq_file} | {config[bwa_bin]} mem -t {config[nop_bwa]} -T 0 -L 0 {config[ref_gen]} - | {config[sam_bin]} view -Shu - | {config[sam_bin]} sort -T tmps/{config[treat]} -o - - | {config[sam_bin]} rmdup -s - - >{output.aln_file}"""

rule bam2bedgraph:
	input:
		bam_file='alignment/'+config['treat']+'.bam'
	output:
		bg_file='bigwig/'+config['treat']+'.bg'
	shell:
		"""{config[bed_bin]} genomecov -bga -ibam {input.bam_file} | egrep 'chr[0-9XY]' | grep -v "_" | {config[bed_bin]} sort -i - >{output.bg_file}"""
rule bedgraph2bigwig:
	input:
		bg_file='bigwig/'+config['treat']+'.bg'
	output:
		wig_file='bigwig/'+config['treat']+'.bw'
	shell:
		"""{config[bed_2_bw]} {input.bg_file} {config[hg19_chr_size]} {output.wig_file} """
rule peakCalling:
	input:
		treat_file='alignment/'+config['treat']+'.bam'
	output:
		peak_file='macs2/'+config['treat']+'_peaks.narrowPeak'
	shell:
		"""{config[macs2_bin]} callpeak -t {input.treat_file} -n {config[treat]} -q 0.1 -g hs --outdir macs2"""
